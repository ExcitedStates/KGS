KGS = ../../../build/kgs_transition
SCRIPTS = ../../../scripts/

PLOTBASICS  = python $(SCRIPTS)/plotBasics.py
PLOTLENGTHS  = python $(SCRIPTS)/plotBondLengths.py
PLOTCONSTRAINTS  = python $(SCRIPTS)/plotConstraints.py
PLOTPATHSTEPS = python $(SCRIPTS)/combineKGSPath_steps.py
PATHPLOTS = python $(SCRIPTS)/pathPlots.py
#ENERGYFIT = python $(SCRIPTS)/fit_energy_deltas.py
TORSIONTUBE1 = python $(SCRIPTS)/computeAbsoluteSteps.py
TORSIONTUBE2 = python $(SCRIPTS)/colorByTorsionRMSF.py
PAIRWISETREE = python $(SCRIPTS)/pairwiseTreeDistances.py
CLASHNETWORKS = python $(SCRIPTS)/clashNetworks_fwdRev.py 
CLASHGRAPHS = python $(SCRIPTS)/clashGraphs_fwdRev.py
CLASHDENSITIES = python $(SCRIPTS)/clashDensities_fwdRev.py

all: output.txt distancePlots/pairedRMSD_twoTrees.png constraintPlots/covBondLengths.png comboAnalysis/*path*.pdb comboAnalysis/combined_qFile.txt comboAnalysis/pairedRMSD_twoTrees.png comboAnalysis/init_clashNetworks_10.pdb comboAnalysis/*clashDensities.pdb energyPlots/energy_deltas_complete.csv  #constraintPlots/forwardPath_meanMaxViolation.png comboAnalysis/init_torsionRMSF_all.pdb 

# Assumes that KGSARGS has been set
output.txt:
	mkdir -p output
	$(KGS) $(KGSARGS) | tee $@

distancePlots/pairedRMSD_twoTrees.png: output.txt
	$(PLOTBASICS) output

constraintPlots/covBondLengths.png: output.txt
	$(PLOTLENGTHS) output/*allCovBonds.txt output/*allAnchors.txt kgs_report.log

#constraintPlots/forwardPath_meanMaxViolation.png: output.txt
#	$(PLOTCONSTRAINTS) output/*path.pdb 

comboAnalysis/*path*.pdb: output.txt
	$(PLOTPATHSTEPS) 10 output/*path.pdb

energyPlots/energy_deltas_complete.csv: output.txt
	$(PATHPLOTS) output/*path.pdb

comboAnalysis/combined_qFile.txt: output.txt
	$(TORSIONTUBE1) output/*path.pdb

#comboAnalysis/init_torsionRMSF_all.pdb: output.txt
#	$(TORSIONTUBE2) comboAnalysis/combined_qFile.txt 0 output/*path.pdb

comboAnalysis/pairedRMSD_twoTrees.png: output.txt
	$(PAIRWISETREE) .

comboAnalysis/init_clashNetworks_10.pdb: output.txt
	$(CLASHNETWORKS) 10 output.txt output/*path.pdb 
	$(CLASHGRAPHS) 10 output.txt output/*path.pdb

comboAnalysis/*clashDensities.pdb: output.txt
	$(CLASHDENSITIES) output.txt output/*path.pdb


memcheck:
	mkdir -p output
	rm -f valgrindOutput.txt
	valgrind --tool=memcheck --dsymutil=yes --leak-check=no --show-reachable=yes --num-callers=20 --track-fds=yes --track-origins=yes --log-file=valgrindOutput.txt $(KGS) $(KGSARGS)
	@echo "!! View valgrindOutput.txt to see output of memory check.!!"
	@echo "!! If you cant see line numbers copy the hex-code and paste !!"
	@echo "!! it in gdb. E.g.: break *0x1000AC502!!"

leakcheck:
	mkdir -p output
	rm -f valgrindOutput.txt
	valgrind --tool=memcheck --leak-check=yes --dsymutil=yes --show-reachable=yes --num-callers=20 --track-fds=yes --track-origins=yes --log-file=valgrindOutput.txt $(KGS) $(KGSARGS)
	@echo "!! View valgrindOutput.txt to see output of memory check !!"
	@echo "!! If you cant see line numbers copy the hex-code and paste !!"
	@echo "!! it in gdb. E.g.: break *0x1000AC502 !!"

clean:
	rm -rf output output.txt kgs_planner.log kgs_report.log *.pdb
	rm -rf constraintPlots distancePlots energyPlots comboAnalysis

